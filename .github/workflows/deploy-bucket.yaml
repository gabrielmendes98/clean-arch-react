name: deploy-bucket
on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version type'
        required: true
        default: 'prepatch'
        type: choice
        options:
          - 'prepatch'
          - 'preminor'
          - 'premajor'
          - 'prerelease'
          - 'patch'
          - 'minor'
          - 'major'
jobs:
  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Tests
        run: yarn test:cov

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint

  sonar-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy-bucket:
    runs-on: ubuntu-latest
    needs: [test-coverage, lint, sonar-scan]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup git user
        uses: fregante/setup-git-user@v2
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Upgrade version
        run: yarn version --$VERSION_TYPE
        env:
          VERSION_TYPE: ${{ inputs.version-type }}
      - name: Build
        run: yarn build
      - name: Push version upgrade
        run: |
          git push
          git push origin --tags